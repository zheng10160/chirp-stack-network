// Code generated by protoc-gen-go. DO NOT EDIT.
// source: protobuf/v1/ns/internal/api/device.proto

package api

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Device struct {
	//设备 id
	DevId int64 `protobuf:"varint,1,opt,name=dev_id,json=devId,proto3" json:"dev_id,omitempty"`
	//8字节，保留未来使用内容，ascii（0x21~0x7E
	Reserved string `protobuf:"bytes,2,opt,name=reserved,proto3" json:"reserved,omitempty"`
	//128字节，主要秘钥区，ascii（0x21~0x7E
	KeyMain string `protobuf:"bytes,3,opt,name=key_main,json=keyMain,proto3" json:"key_main,omitempty"`
	//864字节，随机扩展密码，ascii（0x21~0x7E)
	KeyExt string `protobuf:"bytes,4,opt,name=key_ext,json=keyExt,proto3" json:"key_ext,omitempty"`
	//批次id
	BatchId int64 `protobuf:"varint,5,opt,name=batch_id,json=batchId,proto3" json:"batch_id,omitempty"`
	//批次内流水
	BatchSerial          string   `protobuf:"bytes,6,opt,name=batch_serial,json=batchSerial,proto3" json:"batch_serial,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Device) Reset()         { *m = Device{} }
func (m *Device) String() string { return proto.CompactTextString(m) }
func (*Device) ProtoMessage()    {}
func (*Device) Descriptor() ([]byte, []int) {
	return fileDescriptor_751e6ab429661b3a, []int{0}
}

func (m *Device) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Device.Unmarshal(m, b)
}
func (m *Device) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Device.Marshal(b, m, deterministic)
}
func (m *Device) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Device.Merge(m, src)
}
func (m *Device) XXX_Size() int {
	return xxx_messageInfo_Device.Size(m)
}
func (m *Device) XXX_DiscardUnknown() {
	xxx_messageInfo_Device.DiscardUnknown(m)
}

var xxx_messageInfo_Device proto.InternalMessageInfo

func (m *Device) GetDevId() int64 {
	if m != nil {
		return m.DevId
	}
	return 0
}

func (m *Device) GetReserved() string {
	if m != nil {
		return m.Reserved
	}
	return ""
}

func (m *Device) GetKeyMain() string {
	if m != nil {
		return m.KeyMain
	}
	return ""
}

func (m *Device) GetKeyExt() string {
	if m != nil {
		return m.KeyExt
	}
	return ""
}

func (m *Device) GetBatchId() int64 {
	if m != nil {
		return m.BatchId
	}
	return 0
}

func (m *Device) GetBatchSerial() string {
	if m != nil {
		return m.BatchSerial
	}
	return ""
}

type GetDeviceRequest struct {
	//设备 id
	DevId                int64    `protobuf:"varint,1,opt,name=dev_id,json=devId,proto3" json:"dev_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetDeviceRequest) Reset()         { *m = GetDeviceRequest{} }
func (m *GetDeviceRequest) String() string { return proto.CompactTextString(m) }
func (*GetDeviceRequest) ProtoMessage()    {}
func (*GetDeviceRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_751e6ab429661b3a, []int{1}
}

func (m *GetDeviceRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetDeviceRequest.Unmarshal(m, b)
}
func (m *GetDeviceRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetDeviceRequest.Marshal(b, m, deterministic)
}
func (m *GetDeviceRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetDeviceRequest.Merge(m, src)
}
func (m *GetDeviceRequest) XXX_Size() int {
	return xxx_messageInfo_GetDeviceRequest.Size(m)
}
func (m *GetDeviceRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetDeviceRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetDeviceRequest proto.InternalMessageInfo

func (m *GetDeviceRequest) GetDevId() int64 {
	if m != nil {
		return m.DevId
	}
	return 0
}

type GetDeviceResponse struct {
	//Device object
	Device *Device `protobuf:"bytes,1,opt,name=device,proto3" json:"device,omitempty"`
	// Last seen timestamp.
	LastSeenAt           *timestamp.Timestamp `protobuf:"bytes,5,opt,name=last_seen_at,json=lastSeenAt,proto3" json:"last_seen_at,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *GetDeviceResponse) Reset()         { *m = GetDeviceResponse{} }
func (m *GetDeviceResponse) String() string { return proto.CompactTextString(m) }
func (*GetDeviceResponse) ProtoMessage()    {}
func (*GetDeviceResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_751e6ab429661b3a, []int{2}
}

func (m *GetDeviceResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetDeviceResponse.Unmarshal(m, b)
}
func (m *GetDeviceResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetDeviceResponse.Marshal(b, m, deterministic)
}
func (m *GetDeviceResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetDeviceResponse.Merge(m, src)
}
func (m *GetDeviceResponse) XXX_Size() int {
	return xxx_messageInfo_GetDeviceResponse.Size(m)
}
func (m *GetDeviceResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetDeviceResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetDeviceResponse proto.InternalMessageInfo

func (m *GetDeviceResponse) GetDevice() *Device {
	if m != nil {
		return m.Device
	}
	return nil
}

func (m *GetDeviceResponse) GetLastSeenAt() *timestamp.Timestamp {
	if m != nil {
		return m.LastSeenAt
	}
	return nil
}

func init() {
	proto.RegisterType((*Device)(nil), "api.Device")
	proto.RegisterType((*GetDeviceRequest)(nil), "api.GetDeviceRequest")
	proto.RegisterType((*GetDeviceResponse)(nil), "api.GetDeviceResponse")
}

func init() {
	proto.RegisterFile("protobuf/v1/ns/internal/api/device.proto", fileDescriptor_751e6ab429661b3a)
}

var fileDescriptor_751e6ab429661b3a = []byte{
	// 407 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x7c, 0x92, 0xc1, 0x6e, 0xd4, 0x30,
	0x10, 0x86, 0xb5, 0x5d, 0x9a, 0x16, 0x6f, 0x91, 0xc0, 0xd2, 0xd2, 0x10, 0x81, 0x28, 0xcb, 0x65,
	0x39, 0x34, 0x56, 0x97, 0x43, 0x2f, 0x1c, 0xa0, 0x02, 0x55, 0x3d, 0x70, 0xd9, 0x70, 0xe2, 0x12,
	0x39, 0xf1, 0xb0, 0x35, 0x49, 0xec, 0x60, 0xcf, 0x86, 0x46, 0x88, 0x0b, 0xaf, 0xc0, 0x73, 0xf0,
	0x34, 0xbc, 0x02, 0x0f, 0x82, 0x32, 0xde, 0x56, 0xd5, 0x4a, 0x70, 0x8b, 0xe7, 0xff, 0xfc, 0xcf,
	0x9f, 0x19, 0xb3, 0x79, 0xeb, 0x2c, 0xda, 0x62, 0xfd, 0x49, 0x74, 0x27, 0xc2, 0x78, 0xa1, 0x0d,
	0x82, 0x33, 0xb2, 0x16, 0xb2, 0xd5, 0x42, 0x41, 0xa7, 0x4b, 0x48, 0x09, 0xe1, 0x63, 0xd9, 0xea,
	0xe4, 0xf1, 0xca, 0xda, 0x55, 0x0d, 0xa4, 0x4a, 0x63, 0x2c, 0x4a, 0xd4, 0xd6, 0xf8, 0x80, 0x24,
	0x4f, 0x37, 0xea, 0x8d, 0x27, 0xea, 0x06, 0x3c, 0xca, 0xa6, 0x0d, 0xc0, 0xec, 0xd7, 0x88, 0x45,
	0x6f, 0xc9, 0x94, 0x4f, 0x59, 0xa4, 0xa0, 0xcb, 0xb5, 0x8a, 0x47, 0x47, 0xa3, 0xf9, 0x78, 0xb9,
	0xab, 0xa0, 0xbb, 0x50, 0x3c, 0x61, 0xfb, 0x0e, 0x3c, 0xb8, 0x0e, 0x54, 0xbc, 0x73, 0x34, 0x9a,
	0xdf, 0x5d, 0xde, 0x9c, 0xf9, 0x23, 0xb6, 0x5f, 0x41, 0x9f, 0x37, 0x52, 0x9b, 0x78, 0x4c, 0xda,
	0x5e, 0x05, 0xfd, 0x7b, 0xa9, 0x0d, 0x3f, 0x64, 0xc3, 0x67, 0x0e, 0x57, 0x18, 0xdf, 0x21, 0x25,
	0xaa, 0xa0, 0x7f, 0x77, 0x85, 0xc3, 0x9d, 0x42, 0x62, 0x79, 0x39, 0x34, 0xda, 0xa5, 0x46, 0x7b,
	0x74, 0xbe, 0x50, 0xfc, 0x19, 0x3b, 0x08, 0x92, 0x07, 0xa7, 0x65, 0x1d, 0x47, 0x74, 0x71, 0x42,
	0xb5, 0x8c, 0x4a, 0xb3, 0x17, 0xec, 0xfe, 0x39, 0x60, 0x48, 0xbc, 0x84, 0x2f, 0x6b, 0xf0, 0xf8,
	0x8f, 0xe0, 0xb3, 0x8e, 0x3d, 0xb8, 0x85, 0xfa, 0xd6, 0x1a, 0x0f, 0xfc, 0x39, 0xb1, 0xba, 0x04,
	0x62, 0x27, 0x8b, 0x49, 0x2a, 0x5b, 0x9d, 0x6e, 0xa0, 0x8d, 0xc4, 0x5f, 0xb1, 0x83, 0x5a, 0x7a,
	0xcc, 0x3d, 0x80, 0xc9, 0x25, 0x52, 0xcc, 0xc9, 0x22, 0x49, 0xc3, 0x30, 0xd3, 0xeb, 0x61, 0xa6,
	0x1f, 0xae, 0x87, 0xb9, 0x64, 0x03, 0x9f, 0x01, 0x98, 0x37, 0xb8, 0x50, 0xec, 0x5e, 0xf0, 0xcb,
	0xc0, 0x91, 0x5d, 0xc6, 0xc6, 0xe7, 0x80, 0x7c, 0x4a, 0xad, 0xb6, 0xd3, 0x27, 0x0f, 0xb7, 0xcb,
	0x21, 0xe9, 0xec, 0xc9, 0x8f, 0xdf, 0x7f, 0x7e, 0xee, 0x1c, 0xf2, 0xe9, 0xad, 0xc5, 0x7b, 0xf1,
	0x2d, 0xfc, 0xe9, 0xf7, 0xb3, 0xb3, 0x8f, 0xaf, 0x57, 0x1a, 0x2f, 0xd7, 0x45, 0x5a, 0xda, 0x46,
	0x7c, 0xb6, 0xe6, 0xe4, 0xf4, 0x54, 0xd4, 0x55, 0x7f, 0x6c, 0x00, 0xbf, 0x5a, 0x57, 0x1d, 0xd3,
	0x8a, 0x9c, 0xf8, 0xcf, 0x6b, 0x2a, 0x22, 0x12, 0x5f, 0xfe, 0x0d, 0x00, 0x00, 0xff, 0xff, 0x3e,
	0x45, 0x0b, 0xd1, 0x73, 0x02, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// DeviceServiceClient is the client API for DeviceService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type DeviceServiceClient interface {
	// Get returns the device matching the given DevId.
	Get(ctx context.Context, in *GetDeviceRequest, opts ...grpc.CallOption) (*GetDeviceResponse, error)
}

type deviceServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewDeviceServiceClient(cc grpc.ClientConnInterface) DeviceServiceClient {
	return &deviceServiceClient{cc}
}

func (c *deviceServiceClient) Get(ctx context.Context, in *GetDeviceRequest, opts ...grpc.CallOption) (*GetDeviceResponse, error) {
	out := new(GetDeviceResponse)
	err := c.cc.Invoke(ctx, "/api.DeviceService/Get", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// DeviceServiceServer is the server API for DeviceService service.
type DeviceServiceServer interface {
	// Get returns the device matching the given DevId.
	Get(context.Context, *GetDeviceRequest) (*GetDeviceResponse, error)
}

// UnimplementedDeviceServiceServer can be embedded to have forward compatible implementations.
type UnimplementedDeviceServiceServer struct {
}

func (*UnimplementedDeviceServiceServer) Get(ctx context.Context, req *GetDeviceRequest) (*GetDeviceResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Get not implemented")
}

func RegisterDeviceServiceServer(s *grpc.Server, srv DeviceServiceServer) {
	s.RegisterService(&_DeviceService_serviceDesc, srv)
}

func _DeviceService_Get_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetDeviceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DeviceServiceServer).Get(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.DeviceService/Get",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DeviceServiceServer).Get(ctx, req.(*GetDeviceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _DeviceService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "api.DeviceService",
	HandlerType: (*DeviceServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Get",
			Handler:    _DeviceService_Get_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "protobuf/v1/ns/internal/api/device.proto",
}
